package sprite.framework;

import java.awt.Graphics2D;
import java.awt.Point;

public abstract class GraphicsElement {

	private GraphicsContainer container;
	public GraphicsContainer getContainer() {
		return container;
	}
	public void setContainer(GraphicsContainer container) {
		this.container = container;
	}

	/* Position of the element.
	 * For convenience, we set the relative position 
	 * and get the absolute position (= container position + relative position).
	 */
	private Point position;
	public int getX() {
		return getContainer().getX() + position.x;
	}
	public int getY() {
		return getContainer().getX() + position.y;
	}
	public void setPosition(int x, int y){
		position.x=x;
		position.y=y;
	}
	public Point getPosition(){
		return position;
	}
	public void move(int deltaX, int deltaY){
		position.x+=deltaX;
		position.y+=deltaY;
	}

	// Render this element.
	public abstract void paint(Graphics2D g);

	// Advance this element by one step in the animation (next frame for animated sprites, move a bit for particles...).
	public abstract void animationStep();

	// Determine if a given pixel is inside this element. Used to determine which element was clicked.
	protected abstract boolean isInside(Point point);

	/* Test if we clicked on this element or elsewhere, return true after handling the click
	 * or false if this element is not the clicked one.
	 */
	public boolean handleClick(Point point){
		if(isInside(point)){
			if (clickAction !=null)
				clickAction.run();
			return true;
		}
		return false;
	}

	// Same for mouseover.
	public boolean handleMouseOver(Point point){
		if(isInside(point)){
			if (mouseOverAction !=null)
				mouseOverAction.run();
			return true;
		}
		return false;
	}

	// Action to run when this element is clicked.
	private Action clickAction;
	public void setClickAction(Action action) {
		this.clickAction = action;
	}
	public void unsetClickAction(){ clickAction = null;}


	// Same for mouseover.
	private Action mouseOverAction;
	public void setMouseOverAction(Action action) {
		this.mouseOverAction = action;
	}
	public void unsetMouseOverAction(){ mouseOverAction = null;}
}
