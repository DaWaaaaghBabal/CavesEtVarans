package sprite.files;

import java.awt.image.BufferedImage;
import java.io.File;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

import javax.imageio.ImageIO;

import window.AppWindow;

public class ImageManager {

	private Map<String, BufferedImage[]> imageLists = new HashMap<String, BufferedImage[]>();

	private static ImageManager instance;

	public static ImageManager getInstance() {
		if (instance == null)
			instance = new ImageManager();
		return instance;
	}


	public BufferedImage[] getImageList(String folder){
		/* If it's the first time we use this image folder, we initialise it by reading the files in folder ;
		 * otherwise just return the relevant list.
		 */

		if(!imageLists.keySet().contains(folder)){
			try {
				URL url = getClass().getResource("/images/"+folder);
				File f;
				f = new File(url.toURI());
				File[] fileList = f.listFiles();
				Map<Integer, BufferedImage> imgList=new HashMap<Integer, BufferedImage>();
				boolean isInteger;
				for(File file : fileList){
					// The "Integer.parse..." part is here to ensure we put the images in the right order (in the folder, images are numbered in the right order).
					// It also ensures that we extract only numbered image files, avoiding problems if there are other files in the folder.
					isInteger=true;
					int i=0;
					try {
						i = Integer.parseInt(file.getName().substring(0, file.getName().length()-4))-1;
					} catch (NumberFormatException e2){
						isInteger=false;
					}
					if(isInteger){

						imgList.put(i, ImageIO.read(file));
					} 
				}
				BufferedImage[] imgArray = new BufferedImage[imgList.keySet().size()];
				for(Entry<Integer, BufferedImage> entry : imgList.entrySet()){
					imgArray[entry.getKey()]=entry.getValue();
				}
				imageLists.put(folder, imgArray);
			}catch (Exception e) {
				AppWindow.displayException(e);
			}
		}
		return imageLists.get(folder);
	}
}
