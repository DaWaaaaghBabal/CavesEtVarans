package basicUI;

import java.awt.GridLayout;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Observable;
import java.util.Observer;

import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.BevelBorder;

import skills.SkillContext;
import character.GameCharacter;
import character.statistics.Statistic;

@SuppressWarnings("serial")
public class TestCharacterDisplay extends JPanel implements Observer{

	private Map<String, JLabel> displayedStats;

	private GameCharacter displayedCharacter;

	private JLabel HPlabel;
	private JLabel ENERlabel;

	public GameCharacter getDisplayedCharacter() {
		return displayedCharacter;
	}

	public void setDisplayedCharacter(GameCharacter displayedCharacter) {
		this.displayedCharacter = displayedCharacter;
		update();
	}

	public TestCharacterDisplay() {
		super();
		displayedStats = new HashMap<String, JLabel>();
		setLayout(new GridLayout(0,2));
		setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));

		initStatDisplay(Statistic.DEFENCE);
		initStatDisplay(Statistic.DODGE);
		initStatDisplay(Statistic.MELEE_ATK);
		initStatDisplay(Statistic.MELEE_DMG);
		initStatDisplay(Statistic.RANGE_ATK);
		initStatDisplay(Statistic.RANGE_DMG);
		initStatDisplay(Statistic.WILLPOWER);
		initStatDisplay(Statistic.SPELL_POWER);
		initStatDisplay(Statistic.CLASS_STAT);
		initStatDisplay(Statistic.INITIATIVE);

		add(new JLabel("Health"));
		HPlabel = new JLabel("");
		add(HPlabel);
		
		add(new JLabel("Energy"));
		ENERlabel = new JLabel("");
		add(ENERlabel);
	}

	private void initStatDisplay(String stat) {
		add(new JLabel(stat));
		JLabel label = new JLabel("");
		add(label);
		displayedStats.put(stat, label);
	}

	@Override
	public void update(Observable arg0, Object arg1) {
		update();
	}
	private void update() {
		for(Entry<String, JLabel> entry : displayedStats.entrySet()){
			int val = (int)displayedCharacter.getStatistic(entry.getKey(), getDisplayContext());
			entry.getValue().setText(val+"");
		}
		
		HPlabel.setText(displayedCharacter.getHitPoints()+"/"+(int)displayedCharacter.getStatistic(Statistic.MAX_HEALTH, getDisplayContext()));
	}

	private SkillContext getDisplayContext() {
		return new SkillContext();
	}

}
