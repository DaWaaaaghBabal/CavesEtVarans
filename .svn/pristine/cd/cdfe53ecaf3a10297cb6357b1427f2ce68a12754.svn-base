package sprite;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.image.BufferedImage;

import sprite.files.ImageManager;

public class ImageSpriteLayer extends SpriteLayer{

	private String imageFolder;
	private String getImageFolder() {
		return imageFolder;
	}
	private void setImageFolder(String imageFolder) {
		this.imageFolder = imageFolder;
	}

	public ImageSpriteLayer(String imageFolder){
		super();
		setImageFolder(imageFolder);
		restart();
	}

	protected BufferedImage[] getImageList(){
		return ImageManager.getInstance().getImageList(
				getImageFolder()+
				"/"+container.getAction()+
				"/"+container.getOrientation()[0]+container.getOrientation()[1]);
	}

	protected BufferedImage getCurrentImage(){
		return getImageList()[currentFrame];
	}

	int currentFrame;

	public boolean isInside(Point point) {
		/* We consider the point to be inside a sprite if the point is inside the bounds of the sprite's image
		 * and its alpha is greater than 64 (roughly 25%)
		 */
		if(point.getX()>=container.getX()){
			if(point.getY()>=container.getY()){
				BufferedImage img = getCurrentImage();
				int relativeX=(int) (point.getX()-container.getX());
				if(relativeX < img.getWidth()){
					int relativeY=(int) (point.getY()-container.getY());
					if(relativeY < img.getHeight()){
						if (((img.getRGB(relativeX, relativeY)>>24) & 0xFF) > 0x40) 
							return true;
					}
				}
			}
		}
		return false;
	}

	public void paint(Graphics g){
		Graphics2D g2 = (Graphics2D) g;
		g2.drawImage(getCurrentImage(), (int)(container.getX()), (int)(container.getY()), null);
	}

	protected void restart() {
		currentFrame=0;
		animationTerminated=false;
	}

	public void stepForward() {
		if (!animationTerminated) {
			if (true) {
				if (currentFrame < getImageList().length - 1)
					currentFrame++;
				else {
					currentFrame = 0;
					animationTerminated = true;
					container.animationTerminated();
				}
			}
		}
	}
}
